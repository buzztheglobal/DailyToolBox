# Generated by Django 5.2.3 on 2025-06-24 08:49

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('menu', '0002_alter_menuitem_url'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='menuitem',
            options={'ordering': ['parent_menu__order', 'parent_menu__title', 'order', 'title'], 'verbose_name': 'Menu Item', 'verbose_name_plural': 'Menu Items'},
        ),
        migrations.RemoveField(
            model_name='menuitem',
            name='name',
        ),
        migrations.RemoveField(
            model_name='menuitem',
            name='parent',
        ),
        migrations.AddField(
            model_name='menuitem',
            name='access_level',
            field=models.CharField(choices=[('public', 'Public'), ('authenticated', 'Authenticated'), ('premium', 'Premium'), ('admin', 'Admin')], default='public', help_text='Required access level to view this menu item.', max_length=50),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='analytics_data',
            field=models.JSONField(blank=True, help_text='Store custom analytics data related to this menu item.', null=True),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='archived_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the menu item was archived.', null=True),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='archived_by',
            field=models.ForeignKey(blank=True, help_text='User who archived this menu item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_items_archived', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the menu item was created.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this menu item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_items_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='custom_css',
            field=models.TextField(blank=True, help_text='Apply custom CSS rules to this menu item for unique styling.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='custom_js',
            field=models.TextField(blank=True, help_text='Execute custom JavaScript when this menu item is interacted with.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='deleted_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the menu item was soft-deleted.', null=True),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User who soft-deleted this menu item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_items_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='draft_version',
            field=models.CharField(blank=True, help_text="Identifier for the draft version (e.g., 'v1.0-draft').", max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='featured_image_url',
            field=models.URLField(blank=True, help_text='URL for a featured image (e.g., for promotional banners).', max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='geo_location',
            field=models.CharField(blank=True, help_text="Target specific geographical regions (e.g., 'US', 'Europe').", max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='icon',
            field=models.CharField(blank=True, help_text="CSS class for an icon (e.g., 'fa fa-home', 'bi-gear').", max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_accessible',
            field=models.BooleanField(default=True, help_text='Globally control accessibility based on access_level.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_archived',
            field=models.BooleanField(default=False, help_text='If True, this menu item is archived (soft delete for historical purposes).'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_cacheable',
            field=models.BooleanField(default=True, help_text='Allow caching of content related to this menu item for performance.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='If True, this menu item is soft-deleted (hidden from active view).'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_draft',
            field=models.BooleanField(default=False, help_text='If True, this is a draft version.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_dropdown',
            field=models.BooleanField(default=False, help_text='Indicates if this menu item is a dropdown parent itself.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_external',
            field=models.BooleanField(default=False, help_text='If True, the URL is an external link.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Mark as a featured item (e.g., on a homepage).'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_featured_image',
            field=models.BooleanField(default=False, help_text='Indicates if a featured image should be displayed with this menu item.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_hidden',
            field=models.BooleanField(default=False, help_text='Hide from public view but keep active (e.g., for internal testing).'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_promoted',
            field=models.BooleanField(default=False, help_text='Promote this item for higher visibility.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_published',
            field=models.BooleanField(default=False, help_text='If True, this menu item is live and published.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_scheduled',
            field=models.BooleanField(default=False, help_text='If True, this menu item is scheduled for future publication.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_searchable',
            field=models.BooleanField(default=True, help_text="Allow search engines to index this menu item's content."),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_trending',
            field=models.BooleanField(default=False, help_text="Mark as trending for special display (e.g., 'Hot' badge)."),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_video',
            field=models.BooleanField(default=False, help_text='Indicates if this menu item is associated with a video.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='is_visible',
            field=models.BooleanField(default=True, help_text='Controls if the menu item is shown in public facing navigation (even if active).'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='parent_menu',
            field=models.ForeignKey(blank=True, help_text='For nested menu items (optional). Select a parent menu item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children_menus', to='menu.menuitem'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='published_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the menu item was published.', null=True),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='published_by',
            field=models.ForeignKey(blank=True, help_text='User who published this menu item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_items_published', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='scheduled_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the menu item is scheduled to be published.', null=True),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='scheduled_by',
            field=models.ForeignKey(blank=True, help_text='User who scheduled this menu item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_items_scheduled', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='seo_description',
            field=models.TextField(blank=True, help_text='SEO-friendly meta description for search engines.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='seo_title',
            field=models.CharField(blank=True, help_text='SEO-friendly title for search engines (if different from display title).', max_length=255),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='target',
            field=models.CharField(choices=[('_self', 'Same Window/Tab'), ('_blank', 'New Window/Tab')], default='_self', help_text="How the link should open ('_self' for same tab, '_blank' for new tab).", max_length=10),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='title',
            field=models.CharField(default='New Menu Item', help_text='Display title for the menu item.', max_length=255),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='tool_domain',
            field=models.CharField(blank=True, help_text="Domain or category this menu item belongs to (e.g., 'SEO Tools', 'Image Editors').", max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp when the menu item was last updated.'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this menu item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_items_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='video_url',
            field=models.URLField(blank=True, help_text='URL for a video (e.g., YouTube, Vimeo).', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Determines if the menu item is generally active and usable.'),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='order',
            field=models.IntegerField(default=0, help_text='Numerical order for display within its level or parent group.'),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='url',
            field=models.CharField(blank=True, help_text='URL the menu item links to (e.g., /about, /products/electronics/, or https://example.com).', max_length=500, null=True),
        ),
    ]
